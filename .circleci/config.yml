version: 2.1
jobs:
  job-1-centos:
    docker:
      - image: centos:latest
    steps:
      - checkout
      - run:
          name: "check if os is ok"
          command: "uname -a"
      # - run:
      #     name: "install updates"
      #     command: "yum -y update" ---->fails on official image
      - run:
          name: "install gcc "
          command: dnf groupinstall -y "Development Tools"
      - run:
          name: "install cmake "
          command: yum install -y cmake
      - run:
          name: creates the build project
          command: "mkdir -p build && cd build && CC=gcc CXX=g++ cmake -D CMAKE_INSTALL_PREFIX=../tarball/build ..&&make&&make install"
  job-2-ubuntu:
    docker:
      - image: ubuntu:latest
        environment:
          - TZ: Europe/Bucharest
          - DEBIAN_FRONTEND: noninteractive
    steps:
      - checkout
      - run:
          name: "check if os is ok"
          command: "uname -a"
      - run:
          name: "test if envar was properly initialized"
          command: "echo $DEBIAN_FRONTEND"
      - run:
          name: "test if envar was properly initialized"
          command: "echo $TZ"
      - run:
          name: "set env vars again"
          command: |
            echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
            echo export DEBIAN_FRONTEND=noninteractive >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: "test if envar was properly initialized"
          command: "echo $DEBIAN_FRONTEND"
      - run:
          name: "install updates"
          command: "apt-get -y update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*"
      - run:
          name: "install gcc and cmake"
          command: "sudo apt-get -y update && sudo apt-get install -y tzdata && sudo apt-get install -y gcc g++  && apt-get install -y cmake"
      - run:
          name: "makes CXX to the default g++ compiler"
          command: which g++
      - run:
          name: creates the build project
          command: "mkdir -p build && cd build && CC=gcc CXX=g++ cmake -D CMAKE_INSTALL_PREFIX=../tarball/build ..&&make&&make install"
  job-3-debian:
    docker:
      - image: debian:latest
    steps:
      - checkout
      - run:
          name: Installing SUDO
          command: "apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*"
      - run:
          name: Installing GCC
          command: "apt-get update && apt-get install -y gcc g++"
      - run:
          name: Install CMAKE
          command: "apt-get update && sudo apt-get install -y cmake"
      - run:
          name: check cmake and gcc
          command: "uname -a && cmake --version && gcc --version"
      - run:
          name: creates the build project
          command: "mkdir -p build && cd build && cmake -D CMAKE_INSTALL_PREFIX=../tarball/build ..&&make&&make install"

workflows:
  version: 2.1
  pipelines: # this is the name of our workflow
    jobs: # and here we list the jobs we are going to run.
      # - job-1-centos
      - job-2-ubuntu
      # - job-3-debian
